cat userlayout_neomys_convert.c | ruby -ne 'puts $_.gsub(/\s*.type = KT_/, "").gsub(/^IGNORE_SHIFTLOCK,/, "KF_IL2LOCK_1TO4M(, ").gsub(/^REGULAR,/, "KF_REGULAR_1TO4M(, ").gsub(/^LEVELMOD,/, "KF_LEVEL_MODIFIER(, ").gsub(/^IGNORE_LEVEL,/, "KF_ALL_LEVELS(, ").gsub(/\s*.kf = { /, "").gsub(/\bkf_/, "").gsub(/ },$/, ")").gsub(/\s+[\)]$/, "").gsub(/\s+\/\/ .*$/, "")' | tr -d "\n" | ruby -ne 'puts $_.gsub(/\s+{/, "\n").gsub(/\(, (\w+)/, "(\\1, \\1").gsub(/, level(.*)mod_left/, ", \\1, 0, NULL").gsub(/, level(.*)mod_right/, ", \\1, 1, NULL")' > userlayout_neomys_convert_01.c

cat userlayout_neomys_convert.c | ruby -ne 'puts $_.gsub(/\s*.type = KT_/, "").gsub(/^IGNORE_SHIFTLOCK,/, "KF_IL2LOCK_1TO4M(, ").gsub(/^REGULAR,/, "KF_REGULAR_1TO4M(, ").gsub(/^LEVELMOD,/, "KF_LEVEL_MODIFIER(, ").gsub(/^IGNORE_LEVEL,/, "KF_ALL_LEVELS(, ").gsub(/\s*.kf = { /, "").gsub(/\bkf_/, "").gsub(/ },$/, ")").gsub(/\s+[\)]$/, "").gsub(/\s+\/\/ .*$/, "")' | tr -d "\n" | ruby -ne 'puts $_.gsub(/\s+{/, "\n").gsub(/\(, (\w+)/, "(\\1, \\1").gsub(/, level(.*)mod_left/, ", \\1, 0, NULL").gsub(/, level(.*)mod_right/, ", \\1, 1, NULL").gsub(/^KF_.*\((\w+),.*\)/, "kf_\\1")' | tr '\n' ',' | ruby -ne 'puts $_.gsub(/\/\//, "\n    // ").gsub(/,,/, "\n    { ").gsub(/,kf/, ", kf").gsub(/\s*},\s*/, " ")'
